From ced9054d41a888fabd2a03b31a9ebcc81f63a51f Mon Sep 17 00:00:00 2001
From: "H. Vetinari" <h.vetinari@gmx.com>
Date: Sun, 17 Jul 2022 13:48:31 +0200
Subject: [PATCH 1/5] unconditionally use ninja

---
 setup.py | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/setup.py b/setup.py
index 99ffcf997..e94a3ff60 100644
--- a/setup.py
+++ b/setup.py
@@ -41,6 +41,7 @@ def build_extension(self, ext):
         cmake_generator = os.environ.get("CMAKE_GENERATOR", "")
 
         cmake_args = [
+            f"-GNinja",
             f"-DCMAKE_BUILD_TYPE={config}",
             f"-DPython3_EXECUTABLE={sys.executable}",
             f"-DCMAKE_LIBRARY_OUTPUT_DIRECTORY={extdir}",
@@ -58,7 +59,7 @@ def build_extension(self, ext):
             cmake_args.append("-DBUILD_VECTOR_XLA_LIB=ON")
         build_args = []
 
-        if self.compiler.compiler_type != "msvc":
+        if False:
             # Using Ninja-build since it a) is available as a wheel and b)
             # multithreads automatically. MSVC would require all variables be
             # exported for Ninja to pick it up, which is a little tricky to do.
@@ -79,7 +80,7 @@ def build_extension(self, ext):
                             "-GNinja",
                         ]
 
-        else:
+        elif False:
             # Single config generators are handled "normally"
             single_config = any(x in cmake_generator for x in {"NMake", "Ninja"})
 
